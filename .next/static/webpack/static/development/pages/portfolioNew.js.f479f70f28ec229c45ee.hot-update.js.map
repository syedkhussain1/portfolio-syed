{"version":3,"file":"static/webpack/static/development/pages/portfolioNew.js.f479f70f28ec229c45ee.hot-update.js","sources":["webpack:///./components/portfolioStuff/PortfolioAddForm.js"],"sourcesContent":["/////////////Fromik Implementation///////////\n// Render Prop\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nconst valiateInputs = (validate) => {\n    let errors = {};\n        // if (!values.email) {\n        //   errors.email = 'Required';\n        // } else if (\n        //   !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        // ) {\n        //   errors.email = 'Invalid email address';\n        // }\n        return errors;\n}\n\nconst PortfolioAddForm = (props) => (\n  <div>\n    <Formik\n      initialValues={{ title: '',\n                     description: '',\n                     stack: '' \n                    }}\n\n      validate={validateInputs}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <Field type=\"text\" name=\"title\" />\n          <ErrorMessage name=\"title\" component=\"div\" />\n\n          <Field type=\"text\" name=\"description\" />\n          <ErrorMessage name=\"description\" component=\"div\" />\n\n          <Field type=\"text\" name=\"stack\" />\n          <ErrorMessage name=\"stack\" component=\"div\" />\n\n          <button type=\"submit\" disabled={isSubmitting}>\n            Add New Portfolio\n          </button>\n        </Form>\n      )}\n    </Formik>\n  </div>\n);\n\nexport default PortfolioAddForm;\n\n\n\n\n\n/////////////React form way to implement ////////////\n// import React from 'react'\n\n\n// class PortfolioAddForm extends React.Component {\n//     constructor(props) {\n//       super(props);\n//       this.state = {\n//           title: '',\n//           description: '',\n//           stack: '',\n//         };\n  \n//       this.TitleChangeHandler = this.TitleChangeHandler.bind(this);\n//       this.DescriptionChangeHandler = this.DescriptionChangeHandler.bind(this);\n//       this.StackChangeHandler = this.StackChangeHandler.bind(this);\n//       this.handleSubmit = this.handleSubmit.bind(this);\n//     }\n  \n//     TitleChangeHandler(event) {\n//       this.setState({title: event.target.value});\n//     }\n\n//     DescriptionChangeHandler(event) {\n//         this.setState({description: event.target.value});\n//       }\n    \n//     StackChangeHandler(event) {\n//       this.setState({stack: event.target.value});\n//     }\n  \n//     handleSubmit(event) {\n//       alert('Title: ' + this.state.title + ' ' + this.state.description + ' ' + this.state.stack);\n//       event.preventDefault();\n//     }\n  \n//     render() {\n//       return (\n//         <form onSubmit={this.handleSubmit}>\n//           <label>\n//             Title :\n//             <input type=\"text\" value={this.state.title} onChange={this.TitleChangeHandler} />\n//           </label>\n//           <label>\n//             Description :\n//             <input type=\"text\" value={this.state.description} onChange={this.DescriptionChangeHandler} />\n//           </label>\n//           <label>\n//           Programming Stack used :\n//           <input type=\"text\" value={this.state.stack} onChange={this.StackChangeHandler} />\n//         </label>\n//         <br/>\n//           <input type=\"submit\" value=\"Submit\" />\n//         </form>\n//       );\n//     }\n//   }\n\n//   export default PortfolioAddForm;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AACA;AAFA;AAKA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAXA;AAhBA;AACA;AAmCA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;A","sourceRoot":""}